{"version":3,"sources":["Todo.js","List.js","redux/actions/actions.js","redux/actions/actionTypes.js","App.js","redux/reducers/todosReducer.js","redux/reducers/index.js","index.js","redux/store/configureStore.js"],"names":["Todo","item","onTodoRemoved","onToggleTodo","onEditItem","useState","editing","setEditing","title","value","setValue","handleToggleEdit","textDecoration","completed","style","border","width","height","borderRadius","margin","marginTop","fontSize","paddingLeft","boxShadow","color","display","alignItems","outline","fontWeight","marginLeft","type","onChange","e","target","onClick","backgroundColor","float","cursor","textAlign","justifyContent","marginRight","className","overflow","textOverflow","whiteSpace","id","background","connect","state","items","dispatch","payload","removeTodo","toggleTodo","length","map","key","App","props","event","setState","term","onSubmit","preventDefault","alert","Date","now","createTodo","minHeight","overflowY","this","placeholder","paddingTop","Component","initState","label","combineReducers","action","filter","i","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86eff85e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst Todo = ({ item, onTodoRemoved, onToggleTodo, onEditItem }) => {\n  const [editing, setEditing] = useState(false);\n  const [value, setValue] = useState(item.title);\n\n  const handleTodoRemove = () => {\n    onTodoRemoved(item.id);\n  };\n\n  const handleTodoDone = () => {\n    onToggleTodo(item.id);\n  };\n\n  const handleToggleEdit = () => {\n    setEditing(!editing);\n  };\n\n  const handleEditItem = () => {\n    onEditItem({\n      ...item,\n      title: value,\n    });\n    handleToggleEdit();\n  };\n\n  const textDecoration = item.completed ? \"line-through\" : \"none\";\n\n  return (\n    <div>\n      {!editing ? (\n        <div\n          style={{\n            border: \"1.5px solid grey\",\n            width: 500,\n            height: 30,\n            borderRadius: 5,\n            margin: \"auto\",\n            marginTop: 5,\n            fontWeight: 500,\n            fontSize: 20,\n            paddingLeft: 10,\n            boxShadow: \" 5px 4px 8px grey\",\n            textDecoration,\n            cursor: \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            onClick={handleToggleEdit}\n            style={{\n              width: 400,\n              overflow: \" hidden\",\n              textOverflow: \" ellipsis\",\n              whiteSpace: \"nowrap\",\n              color: \"grey\",\n            }}\n          >\n            {item.title}\n          </div>\n          <div style={{ marginLeft: 23 }}>\n            <button\n              onClick={handleTodoRemove}\n              style={{\n                border: \"1px solid tomato\",\n                outline: \"none\",\n                float: \"right\",\n                fontSize: 20,\n                fontWeight: 300,\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                textDecoration: \" none\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                borderRadius: \"50%\",\n                width: 27,\n                height: 27,\n                marginTop: 1,\n                marginRight: 6,\n                color: \"tomato\",\n                background: \"transparent\",\n              }}\n            >\n              <i className=\"fa fa-trash\"></i>\n            </button>\n            <button\n              onClick={handleTodoDone}\n              style={{\n                border: \"1px solid lightgreen\",\n                marginTop: 1,\n                outline: \"none\",\n                float: \"right\",\n                fontSize: 20,\n                fontWeight: 300,\n                cursor: \"pointer\",\n                textDecoration: \" none\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                marginRight: 4,\n                borderRadius: \"50%\",\n                width: 27,\n                height: 27,\n                background: \"transparent\",\n                color: \"lightgreen\",\n              }}\n            >\n              <i className=\"fa fa-check\"></i>\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div>\n          <div\n            style={{\n              border: \"1.5px solid grey\",\n              width: 500,\n              height: 30,\n              borderRadius: 5,\n              margin: \"auto\",\n              marginTop: 5,\n              fontSize: 20,\n              paddingLeft: 10,\n              boxShadow: \" 5px 4px 8px grey\",\n              color: \"grey\",\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            <input\n              style={{\n                width: 390,\n                height: 18,\n                borderRadius: 5,\n                outline: \"none\",\n                marginTop: 2,\n                fontWeight: 500,\n                fontSize: 20,\n                paddingLeft: 5,\n                marginLeft: -5,\n                border: \"1px solid grey\",\n                color: \"grey\",\n              }}\n              type=\"text\"\n              value={value}\n              onChange={(e) => {\n                setValue(e.target.value);\n              }}\n            />\n            <div style={{ marginLeft: 30 }}>\n              <button\n                onClick={handleToggleEdit}\n                style={{\n                  border: \"1px solid tomato\",\n                  outline: \"none\",\n                  backgroundColor: \"transparent\",\n                  float: \"right\",\n                  fontSize: 20,\n                  fontWeight: 100,\n                  cursor: \"pointer\",\n                  textAlign: \"center\",\n                  textDecoration: \" none\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  borderRadius: \"50%\",\n                  width: 27,\n                  height: 27,\n                  marginTop: 1,\n                  marginRight: 6,\n                  color: \"red\",\n                }}\n              >\n                C\n              </button>\n              <button\n                onClick={handleEditItem}\n                style={{\n                  border: \"1px solid lightgreen\",\n                  marginTop: 1,\n                  outline: \"none\",\n                  backgroundColor: \"transparent\",\n                  float: \"right\",\n                  fontSize: 20,\n                  cursor: \"pointer\",\n                  textAlign: \"center\",\n                  textDecoration: \" none\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  marginRight: 4,\n                  borderRadius: \"50%\",\n                  width: 27,\n                  height: 27,\n                  color: \"lightgreen\",\n                }}\n              >\n                <i className=\"fa fa-check\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Todo;\n","import React from \"react\";\nimport Todo from \"./Todo\";\nimport { connect } from \"react-redux\";\nimport { removeTodo, toggleTodo, editTodo } from \"./redux/actions/actions\";\nimport \"./App.css\";\n\nconst List = ({ items, onTodoRemoved, onToggleTodo, onEditItem }) => {\n  return (\n    <div>\n      {items && items.length ? (\n        items.map((item) => (\n          <Todo\n            key={item.id}\n            item={item}\n            onTodoRemoved={onTodoRemoved}\n            onToggleTodo={onToggleTodo}\n            onEditItem={onEditItem}\n          />\n        ))\n      ) : (\n        <div\n          style={{\n            fontSize: 20,\n            textAlign: \"center\",\n            marginTop: 30,\n            fontWeight: 600,\n          }}>\n          \"You have no tasks, yet!\"\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    items: state.items.items,\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onTodoRemoved: (id) => {\n      dispatch(removeTodo(id));\n    },\n    onToggleTodo: (id) => {\n      dispatch(toggleTodo(id));\n    },\n    onEditItem: (item) => {\n      dispatch(editTodo(item));\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  TOGGLE_TODO,\n  EDIT_TODO,\n  COMPLETED_TODOS,\n} from \"./actionTypes\";\n\nexport const createTodo = (item) => {\n  return {\n    type: ADD_TODO,\n    payload: {\n      ...item,\n      id: Date.now(),\n      completed: false,\n    },\n  };\n};\n\nexport const removeTodo = (id) => {\n  return {\n    type: DELETE_TODO,\n    payload: id,\n  };\n};\n\nexport function toggleTodo(id) {\n  const action = {\n    type: TOGGLE_TODO,\n    payload: id,\n  };\n  return action;\n}\nexport function editTodo(payload) {\n  return {\n    type: EDIT_TODO,\n    payload,\n  };\n}\nexport function completedTodos(filter) {\n  return {\n    type: COMPLETED_TODOS,\n    filter,\n  };\n}\n","export const DELETE_TODO = \"DELETE_TODO\";\nexport const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const ADD_TEXT = \"ADD_TEXT\";\nexport const EDIT_TODO = \"EDIT_TODO\";\nexport const SHOW_ALL = \"SHOW_ALL\";\nexport const COMPLETED_TODOS = \"COMPLETED_TODOS\";\n","import React, { Component } from \"react\";\nimport List from \"./List\";\nimport { connect } from \"react-redux\";\nimport { createTodo } from \"./redux/actions/actions\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: \"\",\n    };\n  }\n\n  onChange = (event) => {\n    this.setState({ term: event.target.value });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.term === \"\") {\n      alert(\"Enter a  task\");\n    } else {\n      const item = {\n        title: this.state.term,\n        completed: this.state.completed,\n        id: Date.now(),\n      };\n      this.props.createTodo(item);\n      this.setState({\n        term: \"\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          border: \"2px solid grey\",\n          width: 600,\n          minHeight: 600,\n          borderRadius: 15,\n          overflowY: \"scroll\",\n          boxShadow: \" 5px 2px 8px grey\",\n        }}\n      >\n        <div\n          style={{\n            border: \"2px solid grey\",\n            width: 580,\n            minHeight: 580,\n            borderRadius: 15,\n            margin: \"auto\",\n            marginTop: 7,\n          }}\n        >\n          <form\n            style={{\n              textAlign: \"center\",\n            }}\n          >\n            <input\n              value={this.state.term}\n              onChange={this.onChange}\n              placeholder=\"Add a task...\"\n              style={{\n                border: \"1.5px solid grey\",\n                width: 200,\n                height: 40,\n                borderRadius: 5,\n                marginTop: 20,\n                fontSize: 20,\n                fontWeight: 200,\n                outline: \"none\",\n                paddingLeft: 12,\n                boxShadow: \" 5px 2px 8px grey\",\n              }}\n            />\n            <button\n              onClick={this.onSubmit}\n              style={{\n                height: 45,\n                width: 60,\n                marginLeft: 10,\n                border: \"1.5px solid lightgreen\",\n                borderRadius: 5,\n                paddingTop: 5,\n                fontWeight: 200,\n                outline: \"none\",\n                boxShadow: \" 5px 2px 8px grey\",\n                cursor: \"pointer\",\n                background: \"transparent\",\n                color: \"green\",\n              }}\n            >\n              Submit\n            </button>\n          </form>\n          <List />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    createTodo: (item) => {\n      dispatch(createTodo(item));\n    },\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  TOGGLE_TODO,\n  EDIT_TODO,\n  COMPLETED_TODOS,\n} from \"../actions/actionTypes\";\n\nconst initState = {\n  items: [\n    {\n      title:\n        \"Somethingnlvnfjnvjfvlnôwekvpwoejvpweovmwwdlômcdôl,xc dwôlcmempewofkwelcmwdôlcmeôqofckeôlcemôl\",\n      id: \"asdsfsf1\",\n      label: \"some label\",\n      completed: false,\n    },\n    {\n      title: \"Thing\",\n      id: \"as\",\n      label: \"some label\",\n      completed: false,\n    },\n    {\n      title: \"Some\",\n      id: \"fsf1\",\n      label: \"some label\",\n      completed: false,\n    },\n  ],\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        items: [...state.items, action.payload],\n      };\n    case DELETE_TODO:\n      return {\n        ...state,\n        items: state.items.filter((i) => i.id !== action.payload),\n      };\n    case TOGGLE_TODO:\n      return {\n        ...state,\n        items: state.items.map((item) =>\n          item.id === action.payload\n            ? { ...item, completed: !item.completed }\n            : item\n        ),\n      };\n    case EDIT_TODO:\n      return {\n        ...state,\n        items: state.items.map((i) =>\n          i.id === action.payload.id ? action.payload : i\n        ),\n      };\n    case COMPLETED_TODOS:\n      return {\n        ...state,\n        items: state.items.filter((i) => i.completed),\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport items from \"./todosReducer\";\n\nexport default combineReducers({\n  items,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/store/configureStore\";\n\nconst store = configureStore();\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createStore, applyMiddleware } from \"redux\";\nimport combineReducers from \"../reducers/index.js\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nexport default function configureStore() {\n  return createStore(\n    combineReducers,\n    composeWithDevTools(applyMiddleware(thunk))\n  );\n}\n"],"sourceRoot":""}